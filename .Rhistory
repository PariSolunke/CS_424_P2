Lat = dplyr::if_else(
.data$LatHemi == "N", .data$Lat * 1, .data$Lat * -1
),
Lon = dplyr::if_else(
.data$LonHemi == "E", .data$Lon * 1, .data$Lon * -1
)
)
hurdat$DateTime <- paste(
paste(hurdat$Year, hurdat$Month, hurdat$Date, sep = "-"),
paste(hurdat$Hour, hurdat$Minute, "00", sep = ":"),
sep = " "
)
hurdat <- dplyr::select(
.data = hurdat,
.data$Key, .data$Name, .data$DateTime, .data$Record:.data$Lat,
.data$Lon, .data$Wind:.data$NW64
)
hurdat$DateTime <- as.POSIXct(
strptime(hurdat$DateTime, format = "%Y-%m-%d %H:%M:%S")
)
hurdat$Name[hurdat$Name == "UNNAMED"] <- hurdat$Key[hurdat$Name == "UNNAMED"]
hurdat$years<-year(hurdat$DateTime)
hurdat$Category[hurdat$Status == "TD"|hurdat$Status == "SD"] = 0.5
hurdat$Category[hurdat$Status == "TS"|hurdat$Status == "SS"] = 0.75
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=64 & hurdat$Wind<=82] = 1
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=83 & hurdat$Wind<=95] = 2
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=96 & hurdat$Wind<=112] = 3
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=113 & hurdat$Wind<=136] = 4
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=137] = 5
hurdat$Name <- paste(hurdat$Name, "-", hurdat$years)
df$colour<-ifelse(df$Category == 0.5, "Green",(ifelse(df$Category == 0.75, "Yellow",(ifelse(df$Category >0.8, "Red","Black")))))
hurdat$Date =  format(hurdat$DateTime,format='%Y-%m-%d')
df1 = hurdat[c("Key","Wind")]
df2 = hurdat[c("Key","Pressure")]
nameKey = hurdat[c("Key","Name")]
df1 = ddply(df1, "Key", numcolwise(max))
df2 = ddply(df2, "Key", numcolwise(min))
nameKey = ddply(nameKey, "Key", function(nameKey) unique(nameKey))
hurricanes = merge(df1,df2, by.x = "Key", by.y = "Key")
df1 = hurdat[c("Key","DateTime")]
df1 = data.table(df1)
df1 = df1[,list(DateTime = min(DateTime)), by = Key]
df1 = data.frame(df1)
hurricanes = merge(hurricanes,df1, by.x = "Key", by.y = "Key")
df2 = hurdat[c("Key","Category")]
df2 = df2[!is.na(df2$Category),]
df2 = ddply(df2, "Key", numcolwise(max))
df2 = merge(df2,df1, by.x = "Key", by.y = "Key")
df2["Key"] <- NULL
df2$DateTime = year(df2$DateTime)
df2 = aggregate(rep(1, nrow(df2)), by = list(x = df2$Category, y = df2$DateTime), sum)
colnames(df2) = c("Category", "Year", "Count")
df2$TD[df2$Category == 0.5] <- df2$Count[df2$Category == 0.5]
df2$TS[df2$Category == 0.75] <- df2$Count[df2$Category == 0.75]
df2$HU1[df2$Category == 1] <- df2$Count[df2$Category == 1]
df2$HU2[df2$Category == 2] <- df2$Count[df2$Category == 2]
df2$HU3[df2$Category == 3] <- df2$Count[df2$Category == 3]
df2$HU4[df2$Category == 4] <- df2$Count[df2$Category == 4]
df2$HU5[df2$Category == 5] <- df2$Count[df2$Category == 5]
df2["Category"] <- NULL
df2["Count"] <- NULL
df2[is.na(df2)] <- 0
df2 = ddply(df2,"Year",numcolwise(sum))
Names<-as.array(unique(df$Name))
yr<-1851:2018
toph<-hurricanes[order(hurricanes$Wind, decreasing = TRUE),]
toph<-head(toph,10)
df[(df$Record=='L'),]
df
hurdat
runApp('C:/Users/Parikshit/Desktop/CS_424_P2/Hurricanes.R')
runApp('C:/Users/Parikshit/Desktop/CS_424_P2/Hurricanes.R')
library(shiny)
library(shinydashboard)
library(ggplot2)
library(lubridate)
library(grid)
library(leaflet)
library(DT)
library(stringi)
library(dplyr)
library(plyr)
library(maptools)
library(sp)
library(data.table)
x <- purrr::map("atlantic.txt", readr::read_lines)
x <- purrr::flatten_chr(x)
hurdat <- as.data.frame(x, stringsAsFactors = FALSE)
header_rows <- grep(pattern = "^[[:alpha:]]{2}[[:digit:]]{6}.+", x)
# Split header_rows into variables
hurdat <- tidyr::extract(
data = hurdat,
col = "x",
into = c("Key", "Name", "Lines"),
regex = paste0(
"([:alpha:]{2}[:digit:]{6}),\\s+", # Key
"([[:upper:][:digit:]-]+)\\s*,\\s+", # Name
"([:digit:]+)," # Number of lines that follow
),
remove = FALSE,
convert = TRUE
)
# Fill headers down
hurdat <- tidyr::fill(data = hurdat, .data$Key, .data$Name, .data$Lines)
# Remove original header rows
hurdat <- hurdat[-header_rows, ]
# Split storm details into variables
hurdat <- tidyr::extract(
data = hurdat,
col = "x",
into = c(
"Year",
"Month",
"Date",
"Hour",
"Minute",
"Record",
"Status",
"Lat",
"LatHemi",
"Lon",
"LonHemi",
"Wind",
"Pressure",
"NE34",
"SE34",
"SW34",
"NW34",
"NE50",
"SE50",
"SW50",
"NW50",
"NE64",
"SE64",
"SW64",
"NW64"
),
regex = paste0(
"^([:digit:]{4})", # Year
"([:digit:]{2})", # Month
"([:digit:]{2}),\\s+", # Date
"([:digit:]{2})", # Hour
"([:digit:]{2}),\\s+", # Minute
"([:alpha:]*),\\s+", # Record
"([:alpha:]{2}),\\s+", # Status
"([:digit:]{1,2}\\.[:digit:]{1})", # Latitude
"([:alpha:]{1}),\\s+", # Hemisphere
"([:digit:]{1,3}\\.[:digit:]{1})", # Longitude
"([:alpha:]{1}),\\s+", # Hemisphere
"([[:digit:]-]+),\\s+", # Wind
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+).*" #
),
remove = FALSE,
convert = TRUE
)
hurdat <- dplyr::mutate(
.data = hurdat,
Lat = dplyr::if_else(
.data$LatHemi == "N", .data$Lat * 1, .data$Lat * -1
),
Lon = dplyr::if_else(
.data$LonHemi == "E", .data$Lon * 1, .data$Lon * -1
)
)
hurdat$DateTime <- paste(
paste(hurdat$Year, hurdat$Month, hurdat$Date, sep = "-"),
paste(hurdat$Hour, hurdat$Minute, "00", sep = ":"),
sep = " "
)
hurdat <- dplyr::select(
.data = hurdat,
.data$Key, .data$Name, .data$DateTime, .data$Record:.data$Lat,
.data$Lon, .data$Wind:.data$NW64
)
hurdat$DateTime <- as.POSIXct(
strptime(hurdat$DateTime, format = "%Y-%m-%d %H:%M:%S")
)
hurdat$Name[hurdat$Name == "UNNAMED"] <- hurdat$Key[hurdat$Name == "UNNAMED"]
hurdat$years<-year(hurdat$DateTime)
hurdat$Category[hurdat$Status == "TD"|hurdat$Status == "SD"] = 0.5
hurdat$Category[hurdat$Status == "TS"|hurdat$Status == "SS"] = 0.75
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=64 & hurdat$Wind<=82] = 1
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=83 & hurdat$Wind<=95] = 2
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=96 & hurdat$Wind<=112] = 3
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=113 & hurdat$Wind<=136] = 4
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=137] = 5
hurdat$Name <- paste(hurdat$Name, "-", hurdat$years)
df<-hurdat
df$colour<-ifelse(df$Category == 0.5, "Green",(ifelse(df$Category == 0.75, "Yellow",(ifelse(df$Category >0.8, "Red","Blue")))))
library(shiny)
library(shinydashboard)
library(ggplot2)
library(lubridate)
library(grid)
library(leaflet)
library(DT)
library(stringi)
library(dplyr)
library(plyr)
library(maptools)
library(sp)
library(data.table)
x <- purrr::map("atlantic.txt", readr::read_lines)
x <- purrr::flatten_chr(x)
hurdat <- as.data.frame(x, stringsAsFactors = FALSE)
header_rows <- grep(pattern = "^[[:alpha:]]{2}[[:digit:]]{6}.+", x)
# Split header_rows into variables
hurdat <- tidyr::extract(
data = hurdat,
col = "x",
into = c("Key", "Name", "Lines"),
regex = paste0(
"([:alpha:]{2}[:digit:]{6}),\\s+", # Key
"([[:upper:][:digit:]-]+)\\s*,\\s+", # Name
"([:digit:]+)," # Number of lines that follow
),
remove = FALSE,
convert = TRUE
)
# Fill headers down
hurdat <- tidyr::fill(data = hurdat, .data$Key, .data$Name, .data$Lines)
# Remove original header rows
hurdat <- hurdat[-header_rows, ]
# Split storm details into variables
hurdat <- tidyr::extract(
data = hurdat,
col = "x",
into = c(
"Year",
"Month",
"Date",
"Hour",
"Minute",
"Record",
"Status",
"Lat",
"LatHemi",
"Lon",
"LonHemi",
"Wind",
"Pressure",
"NE34",
"SE34",
"SW34",
"NW34",
"NE50",
"SE50",
"SW50",
"NW50",
"NE64",
"SE64",
"SW64",
"NW64"
),
regex = paste0(
"^([:digit:]{4})", # Year
"([:digit:]{2})", # Month
"([:digit:]{2}),\\s+", # Date
"([:digit:]{2})", # Hour
"([:digit:]{2}),\\s+", # Minute
"([:alpha:]*),\\s+", # Record
"([:alpha:]{2}),\\s+", # Status
"([:digit:]{1,2}\\.[:digit:]{1})", # Latitude
"([:alpha:]{1}),\\s+", # Hemisphere
"([:digit:]{1,3}\\.[:digit:]{1})", # Longitude
"([:alpha:]{1}),\\s+", # Hemisphere
"([[:digit:]-]+),\\s+", # Wind
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+).*" #
),
remove = FALSE,
convert = TRUE
)
hurdat <- dplyr::mutate(
.data = hurdat,
Lat = dplyr::if_else(
.data$LatHemi == "N", .data$Lat * 1, .data$Lat * -1
),
Lon = dplyr::if_else(
.data$LonHemi == "E", .data$Lon * 1, .data$Lon * -1
)
)
hurdat$DateTime <- paste(
paste(hurdat$Year, hurdat$Month, hurdat$Date, sep = "-"),
paste(hurdat$Hour, hurdat$Minute, "00", sep = ":"),
sep = " "
)
hurdat <- dplyr::select(
.data = hurdat,
.data$Key, .data$Name, .data$DateTime, .data$Record:.data$Lat,
.data$Lon, .data$Wind:.data$NW64
)
hurdat$DateTime <- as.POSIXct(
strptime(hurdat$DateTime, format = "%Y-%m-%d %H:%M:%S")
)
hurdat$Name[hurdat$Name == "UNNAMED"] <- hurdat$Key[hurdat$Name == "UNNAMED"]
hurdat$years<-year(hurdat$DateTime)
hurdat$Category[hurdat$Status == "TD"|hurdat$Status == "SD"] = 0.5
hurdat$Category[hurdat$Status == "TS"|hurdat$Status == "SS"] = 0.75
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=64 & hurdat$Wind<=82] = 1
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=83 & hurdat$Wind<=95] = 2
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=96 & hurdat$Wind<=112] = 3
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=113 & hurdat$Wind<=136] = 4
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=137] = 5
hurdat$Name <- paste(hurdat$Name, "-", hurdat$years)
df<-hurdat
df$colour<-ifelse(df$Category == 0.5, "Green",(ifelse(df$Category == 0.75, "Yellow",(ifelse(df$Category >0.8, "Red","Blue")))))
df$colour
runApp('C:/Users/Parikshit/Desktop/CS_424_P2/Hurricanes.R')
df$colour[df$colour == "NA"]
df$colour
df$colour[df$colour == "NA"] <- "Black"
df$colour[df$colour == "NA"]
df$colour[df$colour == NA] <- "Black"
df$colour[df$colour == "NA"]
> df$colour[is.na(df$colour)] <- "Black"
df$colour[is.na(df$colour)] <- "Black"
df$colour[df$colour == "NA"]
runApp('C:/Users/Parikshit/Desktop/CS_424_P2/Hurricanes.R')
library(shiny)
library(shinydashboard)
library(ggplot2)
library(lubridate)
library(grid)
library(leaflet)
library(DT)
library(stringi)
library(dplyr)
library(plyr)
library(maptools)
library(sp)
library(data.table)
x <- purrr::map("atlantic.txt", readr::read_lines)
x <- purrr::flatten_chr(x)
hurdat <- as.data.frame(x, stringsAsFactors = FALSE)
header_rows <- grep(pattern = "^[[:alpha:]]{2}[[:digit:]]{6}.+", x)
# Split header_rows into variables
hurdat <- tidyr::extract(
data = hurdat,
col = "x",
into = c("Key", "Name", "Lines"),
regex = paste0(
"([:alpha:]{2}[:digit:]{6}),\\s+", # Key
"([[:upper:][:digit:]-]+)\\s*,\\s+", # Name
"([:digit:]+)," # Number of lines that follow
),
remove = FALSE,
convert = TRUE
)
# Fill headers down
hurdat <- tidyr::fill(data = hurdat, .data$Key, .data$Name, .data$Lines)
# Remove original header rows
hurdat <- hurdat[-header_rows, ]
# Split storm details into variables
hurdat <- tidyr::extract(
data = hurdat,
col = "x",
into = c(
"Year",
"Month",
"Date",
"Hour",
"Minute",
"Record",
"Status",
"Lat",
"LatHemi",
"Lon",
"LonHemi",
"Wind",
"Pressure",
"NE34",
"SE34",
"SW34",
"NW34",
"NE50",
"SE50",
"SW50",
"NW50",
"NE64",
"SE64",
"SW64",
"NW64"
),
regex = paste0(
"^([:digit:]{4})", # Year
"([:digit:]{2})", # Month
"([:digit:]{2}),\\s+", # Date
"([:digit:]{2})", # Hour
"([:digit:]{2}),\\s+", # Minute
"([:alpha:]*),\\s+", # Record
"([:alpha:]{2}),\\s+", # Status
"([:digit:]{1,2}\\.[:digit:]{1})", # Latitude
"([:alpha:]{1}),\\s+", # Hemisphere
"([:digit:]{1,3}\\.[:digit:]{1})", # Longitude
"([:alpha:]{1}),\\s+", # Hemisphere
"([[:digit:]-]+),\\s+", # Wind
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+),\\s+", #
"([[:digit:]-]+).*" #
),
remove = FALSE,
convert = TRUE
)
hurdat <- dplyr::mutate(
.data = hurdat,
Lat = dplyr::if_else(
.data$LatHemi == "N", .data$Lat * 1, .data$Lat * -1
),
Lon = dplyr::if_else(
.data$LonHemi == "E", .data$Lon * 1, .data$Lon * -1
)
)
hurdat$DateTime <- paste(
paste(hurdat$Year, hurdat$Month, hurdat$Date, sep = "-"),
paste(hurdat$Hour, hurdat$Minute, "00", sep = ":"),
sep = " "
)
hurdat <- dplyr::select(
.data = hurdat,
.data$Key, .data$Name, .data$DateTime, .data$Record:.data$Lat,
.data$Lon, .data$Wind:.data$NW64
)
hurdat$DateTime <- as.POSIXct(
strptime(hurdat$DateTime, format = "%Y-%m-%d %H:%M:%S")
)
hurdat$Name[hurdat$Name == "UNNAMED"] <- hurdat$Key[hurdat$Name == "UNNAMED"]
hurdat$years<-year(hurdat$DateTime)
hurdat$Category[hurdat$Status == "TD"|hurdat$Status == "SD"] = 0.5
hurdat$Category[hurdat$Status == "TS"|hurdat$Status == "SS"] = 0.75
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=64 & hurdat$Wind<=82] = 1
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=83 & hurdat$Wind<=95] = 2
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=96 & hurdat$Wind<=112] = 3
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=113 & hurdat$Wind<=136] = 4
hurdat$Category[hurdat$Status == "HU" & hurdat$Wind>=137] = 5
hurdat$Name <- paste(hurdat$Name, "-", hurdat$years)
df<-hurdat
df$colour<-ifelse(df$Category == 0.5, "lightgreen",(ifelse(df$Category == 0.75, "darkgreen",(ifelse(df$Category ==1, "yellow",(ifelse(df$Category ==2, "orange",(ifelse(df$Category ==3, "darkorange",(ifelse(df$Category ==4, "red",(ifelse(df$Category ==5, "darkred","darkgrey")))))))))))))
df$colour[is.na(df$colour)] <- "darkgrey"
landfalls<-df[(df$Record=="L"),]
landfalls
df[(df$Name==landfalls$Name),]
df[(df$Name==unique(landfalls$Name),]
df[match(df2$Name, landfalls$Name),]
df[(match(df2$Name, landfalls$Name)),]
df[(match(df$Name, landfalls$Name)),]
df[(match(df$Name, unique(landfalls$Name)),]
names<-unique(landfalls$Name))
names<-unique(landfalls$Name)
df[match(df$Name, names),]
names
filter(df, Name == Names)
filter(df, Name == names)
filter(df, Name == "Gordon - 2012")
filter(df, Name == "GORDON - 2012")
filter(df, Name == as.list(names))
filter(df, Name == c(names))
filter(df, Name == as.array(names))
filter(df, Match[df$Name,names])
filter(df, match[df$Name,names])
filter(df, match[df$Name,names],)
filter(df, (match[df$Name,names],)
filter(df, df(match[df$Name,names],)
)
match[df$Name,names]
match(df$Name,names)
filter(df, match(df$Name,names))
df[match(df$Name,names),]
df[match(df$Name,names),2]
df[match(df$Name,names),10]
df[match(df$Name,names),]
df %>%
filter(Name %in% Landfalls$Name)
df %>%
filter(Name %in% landfalls$Name)
df
df %>%
filter(Name %in% names)
runApp('C:/Users/Parikshit/Desktop/CS_424_P2/Hurricanes.R')
